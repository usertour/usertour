//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Account {
  id String [pk, note: 'Primary key']
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [not null, note: 'Update timestamp']
  user User [not null, note: 'User']
  userId String [not null, note: 'User ID']
  type String [not null, note: 'Account type']
  provider String [not null, note: 'Provider  ']
  providerAccountId String [not null, note: 'Provider account ID']
  refreshToken String [note: 'Refresh token']
  accessToken String [note: 'Access token']
  expiresAt Int [note: 'Token expiration timestamp']
  scope String [note: 'Scope']

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table User {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  email String [unique]
  emailVerified DateTime
  password String
  avatarUrl String
  name String
  projects UserOnProject [not null]
  codes Code [not null]
  accounts Account [not null]
  refreshTokens RefreshToken [not null]
  invites Invite [not null]
}

Table Register {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  code String [not null]
  email String [not null]
}

Table Invite {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  code String [unique, not null]
  expired Boolean [not null, default: false]
  canceled Boolean [not null, default: false]
  deleted Boolean [not null, default: false]
  email String [not null]
  name String [not null]
  role Role [not null]
  user User [not null]
  userId String [not null]
  project Project [not null]
  projectId String [not null]
}

Table Code {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  user User [not null]
  userId String [not null]
  ext Json
}

Table Project {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  logoUrl String
  customerId String [note: 'Stripe customer ID']
  subscriptionId String [note: 'Stripe subscription ID']
  license String [note: 'License']
  users UserOnProject [not null]
  environments Environment [not null]
  themes Theme [not null]
  attributes Attribute [not null]
  events Event [not null]
  localizations Localization [not null]
  invites Invite [not null]
  contents Content [not null]
  segments Segment [not null]
}

Table UserOnProject {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  role Role [not null]
  actived Boolean [not null]
  project Project
  user User
  projectId String
  userId String

  indexes {
    (projectId, userId) [unique]
  }
}

Table Environment {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String
  token String [not null]
  deleted Boolean [not null, default: false]
  project Project [not null]
  projectId String [not null]
  contents Content [not null]
  bizUsers BizUser [not null]
  bizCompanies BizCompany [not null]
  segments Segment [not null]
  accessTokens AccessToken [not null]
  contentOnEnvironments ContentOnEnvironment [not null]
  bizSessions BizSession [not null]
  integrations Integration [not null]
}

Table AccessToken {
  id String [pk]
  prefix String [not null, default: 'ak_']
  accessToken String [unique, not null]
  name String [not null]
  environment Environment [not null]
  environmentId String [not null]
  isActive Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  expiresAt DateTime
  lastUsedAt DateTime
  description String
}

Table Theme {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null, default: '']
  isDefault Boolean [not null, default: false]
  isSystem Boolean [not null, default: false]
  deleted Boolean [not null, default: false]
  project Project [not null]
  projectId String [not null]
  settings Json
  variations Json [note: 'Conditional variations']
  steps Step [not null]
  versions Version [not null]
}

Table Content {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  publishedAt DateTime [default: `now()`]
  name String
  buildUrl String
  type String [not null, default: 'flow']
  published Boolean [not null, default: false]
  deleted Boolean [not null, default: false]
  environment Environment
  environmentId String
  project Project
  projectId String
  config Json
  versions Version [not null]
  editedVersion Version
  publishedVersion Version
  publishedVersionId String [unique]
  editedVersionId String [unique]
  bizSession BizSession [not null]
  contentOnEnvironments ContentOnEnvironment [not null]
}

Table ContentOnEnvironment {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  environment Environment [not null]
  environmentId String [not null]
  content Content [not null]
  contentId String [not null]
  published Boolean [not null, default: false]
  publishedAt DateTime [default: `now()`, not null]
  publishedVersion Version [not null]
  publishedVersionId String [not null]

  indexes {
    (environmentId, contentId) [unique]
  }
}

Table Version {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  publishedAt DateTime
  deleted Boolean [not null, default: false]
  sequence Int [not null, default: 0]
  theme Theme
  themeId String
  content Content [not null]
  contentId String [not null]
  data Json
  config Json
  steps Step [not null]
  editByContent Content
  publishByContent Content
  bizSession BizSession [not null]
  versionOnLocalization VersionOnLocalization [not null]
  contentOnEnvironment ContentOnEnvironment [not null]

  indexes {
    (contentId, sequence) [unique]
  }
}

Table Step {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  sequence Int [not null, default: 0]
  cvid String [not null]
  name String
  type String
  target Json
  data Json
  trigger Json
  setting Json
  screenshot Json
  theme Theme
  themeId String
  version Version [not null]
  versionId String [not null]

  indexes {
    (versionId, cvid) [unique]
    (versionId, sequence) [unique]
  }
}

Table Localization {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  locale String [not null]
  name String [not null]
  code String [not null]
  isDefault Boolean [not null, default: false]
  project Project [not null]
  projectId String [not null]
  VersionOnLocalization VersionOnLocalization [not null]

  indexes {
    (projectId, code) [unique]
  }
}

Table VersionOnLocalization {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  version Version [not null]
  versionId String [not null]
  enabled Boolean [not null, default: false]
  localization Localization [not null]
  localizationId String [not null]
  localized Json [not null]
  backup Json [not null]

  indexes {
    (versionId, localizationId) [unique]
  }
}

Table Attribute {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  bizType Int [not null, default: 1]
  project Project [not null]
  projectId String [not null]
  displayName String [not null, default: '']
  codeName String [not null, default: '']
  description String [not null, default: '']
  dataType Int [not null, default: 1]
  randomMax Int [not null, default: 1]
  source String [not null, default: 'internal']
  predefined Boolean [not null, default: false]
  deleted Boolean [not null, default: false]
  attributeOnEvent AttributeOnEvent [not null]

  indexes {
    (projectId, bizType, codeName) [unique]
  }
}

Table BizUser {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  environment Environment [not null]
  environmentId String [not null]
  externalId String [not null, default: '']
  data Json
  deleted Boolean [not null, default: false]
  bizUsersOnCompany BizUserOnCompany [not null]
  bizCompany BizCompany
  bizCompanyId String
  bizUsersOnSegment BizUserOnSegment [not null]
  bizEvent BizEvent [not null]
  bizSession BizSession [not null]

  indexes {
    (environmentId, externalId) [unique]
  }
}

Table BizUserOnCompany {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  bizCompany BizCompany [not null]
  bizCompanyId String [not null]
  bizUser BizUser [not null]
  bizUserId String [not null]
  data Json [not null]

  indexes {
    (bizCompanyId, bizUserId) [unique]
  }
}

Table BizCompany {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  environment Environment [not null]
  environmentId String [not null]
  externalId String [not null, default: '']
  data Json
  deleted Boolean [not null, default: false]
  bizUsersOnCompany BizUserOnCompany [not null]
  bizUsers BizUser [not null]
  bizCompaniesOnSegment BizCompanyOnSegment [not null]
  BizSession BizSession [not null]

  indexes {
    (environmentId, externalId) [unique]
  }
}

Table Segment {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null, default: '']
  bizType Int [not null, default: 1]
  dataType Int [not null, default: 1]
  source String [default: 'internal', note: 'Source of the segment (e.g., "mixpanel", "heap", etc.)']
  sourceId String [note: 'Source ID of the segment (e.g., "mixpanel_cohort_id")']
  environment Environment
  environmentId String
  project Project
  projectId String
  columns Json
  data Json
  deleted Boolean [not null, default: false]
  bizUsersOnSegment BizUserOnSegment [not null]
  bizCompaniesOnSegment BizCompanyOnSegment [not null]
}

Table BizUserOnSegment {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  segment Segment [not null]
  segmentId String [not null]
  bizUser BizUser [not null]
  bizUserId String [not null]
  data Json

  indexes {
    (segmentId, bizUserId) [unique]
  }
}

Table BizCompanyOnSegment {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  segment Segment [not null]
  segmentId String [not null]
  bizCompany BizCompany [not null]
  bizCompanyId String [not null]
  data Json

  indexes {
    (segmentId, bizCompanyId) [unique]
  }
}

Table Event {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  displayName String [not null, default: '']
  codeName String [not null, default: '']
  description String [not null, default: '']
  deleted Boolean [not null, default: false]
  predefined Boolean [not null, default: false]
  projectId String [not null]
  project Project [not null]
  attributeOnEvent AttributeOnEvent [not null]
  bizEvent BizEvent [not null]

  indexes {
    (codeName, projectId) [unique]
  }
}

Table AttributeOnEvent {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  event Event [not null]
  eventId String [not null]
  attribute Attribute [not null]
  attributeId String [not null]

  indexes {
    (eventId, attributeId) [unique]
  }
}

Table BizSession {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deleted Boolean [not null, default: false]
  state Int [not null, default: 0]
  data Json
  progress Int [not null, default: 0]
  projectId String [not null, default: '']
  environment Environment
  environmentId String
  bizUser BizUser [not null]
  bizUserId String [not null]
  bizCompany BizCompany
  bizCompanyId String
  content Content [not null]
  contentId String [not null]
  version Version [not null]
  versionId String [not null]
  bizEvent BizEvent [not null]
}

Table BizEvent {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  event Event [not null]
  eventId String [not null]
  data Json
  bizUser BizUser [not null]
  bizUserId String [not null]
  bizSession BizSession
  bizSessionId String
}

Table BizAnswer {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  bizEventId String [not null]
  bizSessionId String [not null]
  contentId String [not null]
  versionId String [not null]
  bizUserId String [not null]
  cvid String [not null]
  environmentId String
  numberAnswer Int
  textAnswer String
  listAnswer String[] [not null]

  indexes {
    (bizSessionId, cvid) [unique]
  }
}

Table RefreshToken {
  id String [pk, note: 'Primary key']
  jti String [unique, not null, note: 'Token ID']
  user User [not null, note: 'User']
  userId String [not null, note: 'User ID']
  hashedToken String [not null, note: 'Hashed refresh token']
  revoked Boolean [not null, default: false, note: 'Whether the token has been revoked']
  expiresAt DateTime [not null, note: 'Expiration timestamp']
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [not null, note: 'Update timestamp']
}

Table SubscriptionPlan {
  id String [pk, note: 'Primary key']
  planType String [not null, note: 'Subscription plan type']
  interval String [not null, note: 'Billing interval (monthly, yearly, etc.)']
  lookupKey String [not null, note: 'Lookup key']
  mauQuota Int [not null, default: 3000, note: 'Monthly active user count quota']
  sessionCountQuota Int [not null, default: 5000, note: 'Session count quota']
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [default: `now()`, not null, note: 'Update timestamp']

  indexes {
    (planType, interval) [unique]
  }

  Note: 'Subscription plan'
}

Table Subscription {
  id String [pk, note: 'Primary key']
  subscriptionId String [unique, not null, note: 'Stripe subscription ID']
  lookupKey String [not null, note: 'Stripe price lookup key']
  planType String [not null, note: 'Plan type (hobby, starter, growth, business)']
  interval String [not null, note: 'Billing interval (monthly, yearly, etc.)']
  projectId String [not null, note: 'Project ID']
  status String [not null, note: 'Stripe subscription status']
  isTrial Boolean [not null, default: false, note: 'Whether this is a trial subscription']
  overridePlan Json [note: 'Override plan quota (JSON string)']
  cancelAt DateTime [note: 'Cancel timestamp']
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [default: `now()`, not null, note: 'Update timestamp']

  Note: 'Subscription'
}

Table CheckoutSession {
  id String [pk, note: 'Primary key']
  sessionId String [not null, note: 'Stripe checkout session ID']
  projectId String [not null, note: 'Project ID']
  lookupKey String [not null, note: 'Price lookup key']
  paymentStatus String [note: 'Payment status']
  subscriptionId String [note: 'Stripe subscription ID']
  invoiceId String [note: 'Stripe invoice ID']
  customerId String [note: 'Stripe customer ID']
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [default: `now()`, not null, note: 'Update timestamp']
}

Table Integration {
  id String [pk]
  provider String [not null, note: 'code of rntegration (e.g., "ga", "mixpanel", "posthog")']
  key String [not null, default: '', note: 'api key or  of integration ']
  accessToken String [unique, not null, note: 'access token of integration']
  config Json [note: 'JSON schema for configuration (optional)']
  enabled Boolean [not null, default: false, note: 'Whether the integration is enabled']
  environment Environment [not null, note: 'environment of integration']
  environmentId String [not null, note: 'environment id']
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [default: `now()`, not null, note: 'Update timestamp']
  integrationLogs IntegrationLog [not null, note: 'integration logs']
  integrationOAuth IntegrationOAuth
  integrationObjectMappings IntegrationObjectMapping [not null]

  indexes {
    (environmentId, provider) [unique]
  }
}

Table IntegrationOAuth {
  id String [pk, note: 'primary key']
  createdAt DateTime [default: `now()`, not null, note: 'create timestamp']
  updatedAt DateTime [not null, note: 'update timestamp']
  accessToken String [not null, note: 'access token']
  refreshToken String [not null, note: 'refresh token']
  expiresAt DateTime [not null, note: 'expires at']
  data Json [note: 'data']
  scope String [not null, note: 'scope']
  provider String [not null, note: 'provider (e.g., "salesforce", "hubspot")']
  providerAccountId String [not null, note: 'provider account id']
  integration Integration [not null, note: 'integration']
  integrationId String [unique, not null, note: 'integration id']
}

Table IntegrationObjectMapping {
  id String [pk]
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [default: `now()`, not null, note: 'Update timestamp']
  sourceObjectType String [not null, note: 'source object type (e.g., "account", "contact", "lead")']
  destinationObjectType String [not null, note: 'destination object type (e.g., "user", "company")']
  settings Json [note: 'settings']
  enabled Boolean [not null, default: false, note: 'enabled']
  isSyncing Boolean [not null, default: false, note: 'is syncing']
  lastSyncedAt DateTime [note: 'last synced at']
  integration Integration [not null, note: 'integration']
  integrationId String [not null, note: 'integration id']

  indexes {
    (integrationId, sourceObjectType, destinationObjectType) [unique]
  }
}

Table IntegrationLog {
  id String [pk, note: 'Primary key']
  createdAt DateTime [default: `now()`, not null, note: 'Create timestamp']
  updatedAt DateTime [not null, note: 'Update timestamp']
  integration Integration [not null, note: 'integration']
  integrationId String [not null, note: 'integration id']
  status String [not null, note: 'status of integration log']
  data Json [note: 'data of integration log']
}

Enum Role {
  ADMIN
  VIEWER
  USER
  OWNER
}

Ref: Account.userId > User.id

Ref: Invite.userId > User.id

Ref: Invite.projectId > Project.id

Ref: Code.userId > User.id

Ref: UserOnProject.projectId > Project.id [delete: Cascade]

Ref: UserOnProject.userId > User.id [delete: Cascade]

Ref: Environment.projectId > Project.id

Ref: AccessToken.environmentId > Environment.id

Ref: Theme.projectId > Project.id

Ref: Content.environmentId > Environment.id

Ref: Content.projectId > Project.id

Ref: Content.editedVersionId - Version.id

Ref: Content.publishedVersionId - Version.id

Ref: ContentOnEnvironment.environmentId > Environment.id

Ref: ContentOnEnvironment.contentId > Content.id

Ref: ContentOnEnvironment.publishedVersionId > Version.id

Ref: Version.themeId > Theme.id

Ref: Version.contentId > Content.id

Ref: Step.themeId > Theme.id

Ref: Step.versionId > Version.id

Ref: Localization.projectId > Project.id

Ref: VersionOnLocalization.versionId > Version.id

Ref: VersionOnLocalization.localizationId > Localization.id

Ref: Attribute.projectId > Project.id

Ref: BizUser.environmentId > Environment.id

Ref: BizUser.bizCompanyId > BizCompany.id

Ref: BizUserOnCompany.bizCompanyId > BizCompany.id

Ref: BizUserOnCompany.bizUserId > BizUser.id

Ref: BizCompany.environmentId > Environment.id

Ref: Segment.environmentId > Environment.id

Ref: Segment.projectId > Project.id

Ref: BizUserOnSegment.segmentId > Segment.id

Ref: BizUserOnSegment.bizUserId > BizUser.id

Ref: BizCompanyOnSegment.segmentId > Segment.id

Ref: BizCompanyOnSegment.bizCompanyId > BizCompany.id

Ref: Event.projectId > Project.id

Ref: AttributeOnEvent.eventId > Event.id

Ref: AttributeOnEvent.attributeId > Attribute.id

Ref: BizSession.environmentId > Environment.id

Ref: BizSession.bizUserId > BizUser.id

Ref: BizSession.bizCompanyId > BizCompany.id

Ref: BizSession.contentId > Content.id

Ref: BizSession.versionId > Version.id

Ref: BizEvent.eventId > Event.id

Ref: BizEvent.bizUserId > BizUser.id

Ref: BizEvent.bizSessionId > BizSession.id

Ref: RefreshToken.userId > User.id

Ref: Integration.environmentId > Environment.id

Ref: IntegrationOAuth.integrationId - Integration.id

Ref: IntegrationObjectMapping.integrationId > Integration.id

Ref: IntegrationLog.integrationId > Integration.id